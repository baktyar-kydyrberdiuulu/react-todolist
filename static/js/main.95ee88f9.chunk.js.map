{"version":3,"sources":["context.js","components/Button/index.jsx","components/TodoItem/index.jsx","App.js","index.js"],"names":["Context","React","createContext","CustomButton","text","onClick","useContext","deleteTodo","completeTodo","console","log","TodoItem","todo","id","className","style","complete","ready","notReady","textDecoration","App","useState","todos","setTodos","inputValue","setInputValue","useEffect","localTodos","JSON","parse","localStorage","getItem","updateLocalTodos","arr","setItem","stringify","Provider","value","splice","placeholder","type","onChange","e","target","map","el","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAEaA,G,MAAUC,IAAMC,iB,OCChBC,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAAc,EACVC,qBAAWN,GAAxCO,EADuC,EACvCA,WAAYC,EAD2B,EAC3BA,aAKpB,OAHAC,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GAEL,wBAAQH,QAASA,EAAjB,SAA2BD,KCJzBO,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAAS,EAEDP,qBAAWN,GAAxCO,EAF8B,EAE9BA,WAAYC,EAFkB,EAElBA,aAEpB,OAAO,sBAAKM,UAAU,YAAYC,MAAOH,EAAKI,SAAWC,EAAQC,EAA1D,UACFN,EAAKR,KACN,cAAC,EAAD,CAAcC,QAAS,kBAAMG,EAAaK,IAAKT,KAAMQ,EAAKI,SAAW,mDAAa,2DAClF,cAAC,EAAD,CAAcX,QAAS,kBAAME,EAAWM,IAAKT,KAAK,eAIpDa,EAAQ,CACVE,eAAgB,gBAGdD,EAAW,CACbC,eAAgB,Q,MC+DLC,MA/Ef,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEuBF,mBAAS,IAFhC,mBAENG,EAFM,KAEMC,EAFN,KAkBbC,qBAAU,WAER,IAAIC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,UAGjDJ,GAAcJ,EAASI,KACtB,IAEH,IAAMK,EAAmB,SAACC,GACxBH,aAAaI,QAAQ,QAASN,KAAKO,UAAUF,KAiB/C,OACE,cAACjC,EAAQoC,SAAT,CAAkBC,MAAO,CAAE9B,WARV,SAACM,GAClB,IAAIoB,EAAG,YAAOX,GACdW,EAAIK,OAAOzB,EAAI,GACfU,EAASU,GACTD,EAAiBC,IAIsBzB,aAfpB,SAACK,GACpB,IAAIoB,EAAG,YAAOX,GACdW,EAAIpB,GAAIG,UAAYiB,EAAIpB,GAAIG,SAC5BO,EAASU,GACTD,EAAiBC,KAWjB,SACE,sBAAKnB,UAAU,YAAf,UACA,oBAAIA,UAAU,KAAd,wCAEE,qBAAKA,UAAU,YAAf,SACA,gCACE,uBACIA,UAAU,SACVyB,YAAY,qBACZC,KAAK,OACLH,MAAOb,EACPiB,SAAU,SAACC,GACTjB,EAAciB,EAAEC,OAAON,UAG3B,wBAAQhC,QAxDC,WACjB,IAAI4B,EAAG,sBAAOX,GAAP,CAAc,CAAElB,KAAMoB,EAAYR,UAAU,KAC/CQ,IAEFD,EAASU,GAGTR,EAAc,IAGdO,EAAiBC,KA8CX,sBAIHX,GACCA,EAAMsB,KAAI,SAACC,EAAIhC,GACb,OACE,cAAC,EAAD,CACED,KAAMiC,EACNhC,GAAIA,GACCA,YCtErBiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.95ee88f9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Context = React.createContext()","import React, { useContext } from 'react'\r\nimport { Context } from '../../context'\r\n\r\nexport const CustomButton = ({ text, onClick }) => {\r\n    const { deleteTodo, completeTodo } = useContext(Context)\r\n\r\n    console.log(deleteTodo)\r\n    console.log(completeTodo)\r\n\r\n    return <button onClick={onClick}>{text}</button>\r\n}","import React, { useContext } from 'react'\r\nimport './TodoItem.css'\r\nimport { Context } from '../../context'\r\nimport { CustomButton } from '../Button'\r\n\r\nexport const TodoItem = ({ todo, id }) => {\r\n\r\n    const { deleteTodo, completeTodo } = useContext(Context)\r\n\r\n    return <div className=\"todo-item\" style={todo.complete ? ready : notReady}>\r\n        {todo.text}\r\n        <CustomButton onClick={() => completeTodo(id)} text={todo.complete ? \"отменить\" : \"выполнить\"} />\r\n        <CustomButton onClick={() => deleteTodo(id)} text=\"button\" />\r\n    </div>\r\n}\r\n\r\nconst ready = {\r\n    textDecoration: \"line-through\"\r\n}\r\n\r\nconst notReady = {\r\n    textDecoration: \"none\"\r\n}","import { useState, useEffect } from \"react\";\r\nimport { TodoItem } from \"./components/TodoItem\";\r\nimport \"./App.css\";\r\nimport { Context } from \"./context\";\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const createTodo = () => {\r\n    let arr = [...todos, { text: inputValue, complete: false }];\r\n    if (inputValue) {\r\n      // modify todos\r\n      setTodos(arr);\r\n\r\n      // clear input\r\n      setInputValue(\"\");\r\n\r\n      // save in local storage\r\n      updateLocalTodos(arr);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // getting values of localStorage\r\n    let localTodos = JSON.parse(localStorage.getItem(\"todos\"));\r\n\r\n    // check for emptyness of localStorage\r\n    localTodos && setTodos(localTodos);\r\n  }, []);\r\n\r\n  const updateLocalTodos = (arr) => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(arr));\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    let arr = [...todos];\r\n    arr[id].complete = !arr[id].complete;\r\n    setTodos(arr);\r\n    updateLocalTodos(arr);\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    let arr = [...todos];\r\n    arr.splice(id, 1);\r\n    setTodos(arr);\r\n    updateLocalTodos(arr);\r\n  };\r\n\r\n  return (\r\n    <Context.Provider value={{ deleteTodo, completeTodo }}>\r\n      <div className=\"container\">\r\n      <h1 className=\"h1\">What's the Plan for Today?</h1>\r\n\r\n        <div className=\"mainBlock\">\r\n        <div>\r\n          <input\r\n              className=\"textIn\"\r\n              placeholder=\"type something ...\"\r\n              type=\"text\"\r\n              value={inputValue}\r\n              onChange={(e) => {\r\n                setInputValue(e.target.value);\r\n              }}\r\n            />\r\n            <button onClick={createTodo}>Add</button>\r\n        </div>\r\n          \r\n        </div>\r\n        {todos &&\r\n          todos.map((el, id) => {\r\n            return (\r\n              <TodoItem\r\n                todo={el}\r\n                id={id}\r\n                key={id}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}